apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}
spec:
  backoffLimit: 0
  parallelism: 1
  template:
    spec:
      terminationGracePeriodSeconds: 0
      restartPolicy: Never
      nodeSelector:
        node-role.kubernetes.io/v2c: 'true'
      containers:
      - name: load
        image: {{ .Values.job.image }}
        imagePullPolicy: IfNotPresent
        workingDir: /
        securityContext:
          privileged: true
        command:
        - /tool/load-root-volume
        - {{ .Values.extractMethod }}
        - {{ .Values.vm.disk }}
        - {{ .Values.vm.diskFormat }}
        volumeMounts:
        - name: boot
          mountPath: /boot
          readOnly: true
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        {{- if and (eq .Values.extractMethod "libguestfs") (eq .Values.libguestfs.kvm.enabled true) }}
        - name: kvm
          mountPath: /dev/kvm
        {{- end }}
        - name: tool
          mountPath: /tool
          readOnly: true
        - name: vm-files
          mountPath: /vm
          readOnly: true
        - name: root-volume
          mountPath: /vol
        {{- if eq .Values.extractMethod "7zip" }}
          readOnly: true
        - name: dev
          mountPath: /dev
        {{- end }}
        # volumeDevices:
        # - name: root-volume
        #   devicePath: /dev/vol
      volumes:
      - name: boot
        hostPath:
          path: /boot
      {{- if eq .Values.extractMethod "7zip" }}
      - name: dev
        hostPath:
          path: /dev
          type: Directory
      {{- end }}
      - name: lib-modules
        hostPath:
          path: /lib/modules
      {{- if and (eq .Values.extractMethod "libguestfs") (eq .Values.libguestfs.kvm.enabled true) }}
      - name: kvm
        hostPath:
          path: /dev/kvm
          type: CharDevice
      {{- end }}
      - name: tool
        configMap:
          name: v2c-{{ .Values.vm.name }}
          defaultMode: 0755
      - name: vm-files
        persistentVolumeClaim:
          claimName: vm-files-{{ .Values.vm.name }}
      - name: root-volume
        persistentVolumeClaim:
          claimName: root-{{ .Values.vm.name }}-0